#!/bin/bash

while getopts "b:i:d:g:" opt; do
	case $opt in
	b)
		BRANCH="$OPTARG"
		;;
	i)
		IMAGE="$OPTARG"
		;;
	d)
		DEFCONFIG="$OPTARG"
		;;
	g)
		GIT_REPO="$OPTARG"
		;;
	esac
done

SRCDIR=/usr/src/linux

if test -d $SRCDIR/.git; then
	pushd $SRCDIR
	git pull --ff-only $GIT_REPO $BRANCH
else
	if test "$BRANCH"; then
		git clone -b $BRANCH $GIT_REPO $SRCDIR
	else
		git clone $GIT_REPO $SRCDIR
	fi
	pushd $SRCDIR
fi

if test -x ./chromeos/scripts/prepareconfig; then
	./chromeos/scripts/prepareconfig $DEFCONFIG
	./scripts/config -d ERROR_ON_WARNING
else
	make ${DEFCONFIG}_defconfig
fi

### Enable Kernel Options
enable_opts=(
	SWAP
	SQUASHFS
	CEPH_FS
	IKCONFIG
	SECCOMP
	NAMESPACES
)
for i in ${enable_opts[*]}; do
	case "$i" in
	SWAP|IKCONFIG*|NAMESPACES|SECCOMP)
			./scripts/config -e $i
			;;
	*)
		if egrep -q '^CONFIG_MODULES=y$' .config; then
			./scripts/config -m $i
		else
			./scripts/config -e $i
		fi
		;;
	esac
done
make olddefconfig
enable_opts=(
	# These appear after enabling the previous set of options
	SQUASHFS_LZO
	SQUASHFS_XZ
	IKCONFIG_PROC
)
for i in ${enable_opts[*]}; do
	./scripts/config -e $i
done

make $IMAGE dtbs LOADADDR=0x8000 -j$(nproc)
if grep -q CONFIG_MODULES=y .config; then
	make modules -j$(nproc)
	make INSTALL_MOD_PATH="$(pwd)/tar-install" modules_install
fi
